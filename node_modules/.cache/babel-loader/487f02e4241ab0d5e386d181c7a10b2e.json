{"ast":null,"code":"import _classCallCheck from \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/src/Components/Dashboard.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport axios from \"axios\";\n\nvar styles = function styles(theme) {\n  return {\n    absolute: {\n      margin: 0,\n      top: \"auto\",\n      left: \"auto\",\n      position: \"fixed\",\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 3\n    },\n    card: {\n      minWidth: 275\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\"\n    },\n    pos: {\n      marginBottom: 12\n    }\n  };\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      tasks: []\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"accessToken\");\n      var cache = localStorage.getItem(\"tasks\");\n\n      if (cache) {\n        this.setState({\n          tasks: JSON.parse(cache)\n        });\n      } else {\n        axios.get('https://task-panner-api.herokuapp.com/api/tasks').then(function (res) {\n          _this2.setState({\n            tasks: res.data\n          });\n\n          localStorage.setItem(\"tasks\", JSON.stringify(res.data));\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      var taskList = this.state.tasks.filter(function (task) {\n        return (_this3.props.filteredUser === task.responsible.email || _this3.props.filteredUser === \"Select\") && (_this3.props.filteredDueDate === null || _this3.props.filteredDueDate === task.dueDate) && (_this3.props.filteredStatus === task.status || _this3.props.filteredStatus === \"Select\");\n      }).map(function (task, i) {\n        return React.createElement(Grid, {\n          key: i + 1,\n          container: true,\n          spacing: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          key: i,\n          item: true,\n          xs: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(CardContent, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, task.description), React.createElement(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, task.status, \" - \", task.dueDate), React.createElement(Typography, {\n          component: \"p\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, task.responsible.name)))));\n      });\n      return React.createElement(React.Fragment, null, taskList, React.createElement(Tooltip, {\n        title: \"Add\",\n        \"aria-label\": \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"gray\",\n        component: Link,\n        to: \"/mainView/newTask\",\n        className: classes.absolute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["/home/e-learning_estevan/Documentos/Personal/Task-Planner-React-PWA-FrontEnd/src/Components/Dashboard.js"],"names":["React","withStyles","Tooltip","Fab","AddIcon","Link","Grid","Card","Typography","CardContent","axios","styles","theme","absolute","margin","top","left","position","bottom","spacing","unit","right","card","minWidth","bullet","display","transform","pos","marginBottom","Dashboard","props","state","tasks","defaults","headers","common","localStorage","getItem","cache","setState","JSON","parse","get","then","res","data","setItem","stringify","catch","error","console","log","classes","taskList","filter","task","filteredUser","responsible","email","filteredDueDate","dueDate","filteredStatus","status","map","i","description","name","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport axios from \"axios\";\n\n\nconst styles = theme => ({\n\n    absolute: {\n        margin: 0,\n        top: \"auto\",\n        left: \"auto\",\n        position: \"fixed\",\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 3,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    pos: {\n        marginBottom: 12,\n    },\n\n});\n\nclass Dashboard extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n        }\n    }\n\n    componentWillMount() {\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem(\"accessToken\");\n        const cache = localStorage.getItem(\"tasks\");\n        if (cache) {\n            this.setState({tasks: JSON.parse(cache)});\n        } else {\n            axios.get('https://task-panner-api.herokuapp.com/api/tasks').then((res) => {\n                this.setState({tasks: res.data});\n                localStorage.setItem(\"tasks\", JSON.stringify(res.data));\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    }\n    render() {\n        const {classes} = this.props;\n        const taskList = this.state.tasks.filter(task => (this.props.filteredUser === task.responsible.email || this.props.filteredUser === \"Select\")\n            && (this.props.filteredDueDate === null || this.props.filteredDueDate === task.dueDate)\n            && (this.props.filteredStatus === task.status || this.props.filteredStatus === \"Select\")).map((task, i) => {\n            return (\n\n                <Grid key={i + 1} container spacing={24}>\n                    <Grid key={i} item xs={12}>\n                        <Card>\n                            <CardContent className={classes.card}>\n                                <Typography variant=\"h5\" component=\"h2\">\n                                    {task.description}\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    {task.status} - {task.dueDate}\n                                </Typography>\n                                <Typography component=\"p\">\n                                    {task.responsible.name}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n\n            );\n        });\n        return (\n            <>\n\n                {taskList}\n                <Tooltip title=\"Add\" aria-label=\"Add\">\n                    <Fab color=\"gray\" component={Link} to={\"/mainView/newTask\"} className={classes.absolute}>\n                        <AddIcon/>\n                    </Fab>\n                </Tooltip>\n            </>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(Dashboard);"]},"metadata":{},"sourceType":"module"}